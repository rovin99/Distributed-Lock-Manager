// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/lock.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status codes for responses
type Status int32

const (
	Status_OK                Status = 0
	Status_ERROR             Status = 1
	Status_LOCK_HELD         Status = 2
	Status_LOCK_NOT_HELD     Status = 3
	Status_INVALID_TOKEN     Status = 4 // New status for token validation failures
	Status_PERMISSION_DENIED Status = 5 // New status for permission-related errors
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
		2: "LOCK_HELD",
		3: "LOCK_NOT_HELD",
		4: "INVALID_TOKEN",
		5: "PERMISSION_DENIED",
	}
	Status_value = map[string]int32{
		"OK":                0,
		"ERROR":             1,
		"LOCK_HELD":         2,
		"LOCK_NOT_HELD":     3,
		"INVALID_TOKEN":     4,
		"PERMISSION_DENIED": 5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lock_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_lock_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{0}
}

// Client initialization arguments
type ClientInitArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInitArgs) Reset() {
	*x = ClientInitArgs{}
	mi := &file_proto_lock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInitArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInitArgs) ProtoMessage() {}

func (x *ClientInitArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInitArgs.ProtoReflect.Descriptor instead.
func (*ClientInitArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInitArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ClientInitArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Client initialization response
type ClientInitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInitResponse) Reset() {
	*x = ClientInitResponse{}
	mi := &file_proto_lock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInitResponse) ProtoMessage() {}

func (x *ClientInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInitResponse.ProtoReflect.Descriptor instead.
func (*ClientInitResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{1}
}

func (x *ClientInitResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *ClientInitResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Lock operation arguments
type LockArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                          // Token for lock validation
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockArgs) Reset() {
	*x = LockArgs{}
	mi := &file_proto_lock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockArgs) ProtoMessage() {}

func (x *LockArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockArgs.ProtoReflect.Descriptor instead.
func (*LockArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{2}
}

func (x *LockArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *LockArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LockArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Lock operation response
type LockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"` // Token for future operations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	mi := &file_proto_lock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{3}
}

func (x *LockResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *LockResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *LockResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// File operation arguments
type FileArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                          // Token for permission validation
	RequestId     string                 `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileArgs) Reset() {
	*x = FileArgs{}
	mi := &file_proto_lock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileArgs) ProtoMessage() {}

func (x *FileArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileArgs.ProtoReflect.Descriptor instead.
func (*FileArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{4}
}

func (x *FileArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *FileArgs) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileArgs) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// File operation response
type FileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileResponse) Reset() {
	*x = FileResponse{}
	mi := &file_proto_lock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResponse) ProtoMessage() {}

func (x *FileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResponse.ProtoReflect.Descriptor instead.
func (*FileResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{5}
}

func (x *FileResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *FileResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Lease renewal arguments
type LeaseArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                          // Token for lease validation
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaseArgs) Reset() {
	*x = LeaseArgs{}
	mi := &file_proto_lock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaseArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseArgs) ProtoMessage() {}

func (x *LeaseArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseArgs.ProtoReflect.Descriptor instead.
func (*LeaseArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{6}
}

func (x *LeaseArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *LeaseArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LeaseArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Lease renewal response
type LeaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaseResponse) Reset() {
	*x = LeaseResponse{}
	mi := &file_proto_lock_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseResponse) ProtoMessage() {}

func (x *LeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseResponse.ProtoReflect.Descriptor instead.
func (*LeaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{7}
}

func (x *LeaseResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *LeaseResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_proto_lock_proto protoreflect.FileDescriptor

const file_proto_lock_proto_rawDesc = "" +
	"\n" +
	"\x10proto/lock.proto\x12\x04lock\"N\n" +
	"\x10client_init_args\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\"a\n" +
	"\x14client_init_response\x12$\n" +
	"\x06status\x18\x01 \x01(\x0e2\f.lock.StatusR\x06status\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"]\n" +
	"\tlock_args\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\"p\n" +
	"\rlock_response\x12$\n" +
	"\x06status\x18\x01 \x01(\x0e2\f.lock.StatusR\x06status\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"\x93\x01\n" +
	"\tfile_args\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\tR\trequestId\"Z\n" +
	"\rfile_response\x12$\n" +
	"\x06status\x18\x01 \x01(\x0e2\f.lock.StatusR\x06status\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"^\n" +
	"\n" +
	"lease_args\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\"[\n" +
	"\x0elease_response\x12$\n" +
	"\x06status\x18\x01 \x01(\x0e2\f.lock.StatusR\x06status\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage*g\n" +
	"\x06Status\x12\x06\n" +
	"\x02OK\x10\x00\x12\t\n" +
	"\x05ERROR\x10\x01\x12\r\n" +
	"\tLOCK_HELD\x10\x02\x12\x11\n" +
	"\rLOCK_NOT_HELD\x10\x03\x12\x11\n" +
	"\rINVALID_TOKEN\x10\x04\x12\x15\n" +
	"\x11PERMISSION_DENIED\x10\x052\xad\x02\n" +
	"\vLockService\x12B\n" +
	"\n" +
	"ClientInit\x12\x16.lock.client_init_args\x1a\x1a.lock.client_init_response\"\x00\x125\n" +
	"\vLockAcquire\x12\x0f.lock.lock_args\x1a\x13.lock.lock_response\"\x00\x125\n" +
	"\vLockRelease\x12\x0f.lock.lock_args\x1a\x13.lock.lock_response\"\x00\x124\n" +
	"\n" +
	"FileAppend\x12\x0f.lock.file_args\x1a\x13.lock.file_response\"\x00\x126\n" +
	"\n" +
	"RenewLease\x12\x10.lock.lease_args\x1a\x14.lock.lease_response\"\x00B Z\x1eDistributed-Lock-Manager/protob\x06proto3"

var (
	file_proto_lock_proto_rawDescOnce sync.Once
	file_proto_lock_proto_rawDescData []byte
)

func file_proto_lock_proto_rawDescGZIP() []byte {
	file_proto_lock_proto_rawDescOnce.Do(func() {
		file_proto_lock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)))
	})
	return file_proto_lock_proto_rawDescData
}

var file_proto_lock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_lock_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_lock_proto_goTypes = []any{
	(Status)(0),                // 0: lock.Status
	(*ClientInitArgs)(nil),     // 1: lock.client_init_args
	(*ClientInitResponse)(nil), // 2: lock.client_init_response
	(*LockArgs)(nil),           // 3: lock.lock_args
	(*LockResponse)(nil),       // 4: lock.lock_response
	(*FileArgs)(nil),           // 5: lock.file_args
	(*FileResponse)(nil),       // 6: lock.file_response
	(*LeaseArgs)(nil),          // 7: lock.lease_args
	(*LeaseResponse)(nil),      // 8: lock.lease_response
}
var file_proto_lock_proto_depIdxs = []int32{
	0, // 0: lock.client_init_response.status:type_name -> lock.Status
	0, // 1: lock.lock_response.status:type_name -> lock.Status
	0, // 2: lock.file_response.status:type_name -> lock.Status
	0, // 3: lock.lease_response.status:type_name -> lock.Status
	1, // 4: lock.LockService.ClientInit:input_type -> lock.client_init_args
	3, // 5: lock.LockService.LockAcquire:input_type -> lock.lock_args
	3, // 6: lock.LockService.LockRelease:input_type -> lock.lock_args
	5, // 7: lock.LockService.FileAppend:input_type -> lock.file_args
	7, // 8: lock.LockService.RenewLease:input_type -> lock.lease_args
	2, // 9: lock.LockService.ClientInit:output_type -> lock.client_init_response
	4, // 10: lock.LockService.LockAcquire:output_type -> lock.lock_response
	4, // 11: lock.LockService.LockRelease:output_type -> lock.lock_response
	6, // 12: lock.LockService.FileAppend:output_type -> lock.file_response
	8, // 13: lock.LockService.RenewLease:output_type -> lock.lease_response
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_lock_proto_init() }
func file_proto_lock_proto_init() {
	if File_proto_lock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lock_proto_goTypes,
		DependencyIndexes: file_proto_lock_proto_depIdxs,
		EnumInfos:         file_proto_lock_proto_enumTypes,
		MessageInfos:      file_proto_lock_proto_msgTypes,
	}.Build()
	File_proto_lock_proto = out.File
	file_proto_lock_proto_goTypes = nil
	file_proto_lock_proto_depIdxs = nil
}
