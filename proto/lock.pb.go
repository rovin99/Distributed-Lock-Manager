// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.28.3
// source: proto/lock.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// server return Status, we will add more in the future
type Status int32

const (
	Status_SUCCESS           Status = 0
	Status_FILE_ERROR        Status = 1
	Status_PERMISSION_DENIED Status = 2
	Status_TIMEOUT           Status = 3
	Status_LEASE_EXPIRED     Status = 4 // Added for lease expiration
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "SUCCESS",
		1: "FILE_ERROR",
		2: "PERMISSION_DENIED",
		3: "TIMEOUT",
		4: "LEASE_EXPIRED",
	}
	Status_value = map[string]int32{
		"SUCCESS":           0,
		"FILE_ERROR":        1,
		"PERMISSION_DENIED": 2,
		"TIMEOUT":           3,
		"LEASE_EXPIRED":     4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lock_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_lock_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{0}
}

// lock acquire/release arguments, add any fields you want
type LockArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"` // Added for lock token validation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockArgs) Reset() {
	*x = LockArgs{}
	mi := &file_proto_lock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockArgs) ProtoMessage() {}

func (x *LockArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockArgs.ProtoReflect.Descriptor instead.
func (*LockArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{0}
}

func (x *LockArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *LockArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *LockArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// response struct, adjust or add any fields you want
type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock_service.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_proto_lock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_SUCCESS
}

// Add a lock response that includes the token
type LockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // Token returned on successful lock acquisition
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	mi := &file_proto_lock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{2}
}

func (x *LockResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *LockResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// file append arguments, add any fields you want
type FileArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ClientId      int32                  `protobuf:"varint,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Token         string                 `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"` // Added for lock token validation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileArgs) Reset() {
	*x = FileArgs{}
	mi := &file_proto_lock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileArgs) ProtoMessage() {}

func (x *FileArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileArgs.ProtoReflect.Descriptor instead.
func (*FileArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{3}
}

func (x *FileArgs) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileArgs) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *FileArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *FileArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// lease renewal arguments
type LeaseArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaseArgs) Reset() {
	*x = LeaseArgs{}
	mi := &file_proto_lock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaseArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseArgs) ProtoMessage() {}

func (x *LeaseArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseArgs.ProtoReflect.Descriptor instead.
func (*LeaseArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{4}
}

func (x *LeaseArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *LeaseArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *LeaseArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// field to hold an int, because the arguments and return values should be "message" type
type Int struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rc            int32                  `protobuf:"varint,1,opt,name=rc,proto3" json:"rc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int) Reset() {
	*x = Int{}
	mi := &file_proto_lock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int) ProtoMessage() {}

func (x *Int) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int.ProtoReflect.Descriptor instead.
func (*Int) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{5}
}

func (x *Int) GetRc() int32 {
	if x != nil {
		return x.Rc
	}
	return 0
}

// Add a new message type for init/close responses
type StatusMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rc            int32                  `protobuf:"varint,1,opt,name=rc,proto3" json:"rc,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusMsg) Reset() {
	*x = StatusMsg{}
	mi := &file_proto_lock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMsg) ProtoMessage() {}

func (x *StatusMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMsg.ProtoReflect.Descriptor instead.
func (*StatusMsg) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{6}
}

func (x *StatusMsg) GetRc() int32 {
	if x != nil {
		return x.Rc
	}
	return 0
}

func (x *StatusMsg) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_lock_proto protoreflect.FileDescriptor

var file_proto_lock_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x5d, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x38, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x59, 0x0a, 0x0d, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x72,
	0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5e, 0x0a, 0x0a, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x15, 0x0a, 0x03, 0x49, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x72,
	0x63, 0x22, 0x35, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x72, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45,
	0x4e, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55,
	0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x45, 0x58, 0x50,
	0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x32, 0x8c, 0x03, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x11, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
	0x67, 0x12, 0x44, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x12, 0x17, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x1b, 0x2e, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x67, 0x73,
	0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x73,
	0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x11, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x5f, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_lock_proto_rawDescOnce sync.Once
	file_proto_lock_proto_rawDescData []byte
)

func file_proto_lock_proto_rawDescGZIP() []byte {
	file_proto_lock_proto_rawDescOnce.Do(func() {
		file_proto_lock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)))
	})
	return file_proto_lock_proto_rawDescData
}

var file_proto_lock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_lock_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_lock_proto_goTypes = []any{
	(Status)(0),          // 0: lock_service.Status
	(*LockArgs)(nil),     // 1: lock_service.lock_args
	(*Response)(nil),     // 2: lock_service.Response
	(*LockResponse)(nil), // 3: lock_service.lock_response
	(*FileArgs)(nil),     // 4: lock_service.file_args
	(*LeaseArgs)(nil),    // 5: lock_service.lease_args
	(*Int)(nil),          // 6: lock_service.Int
	(*StatusMsg)(nil),    // 7: lock_service.StatusMsg
}
var file_proto_lock_proto_depIdxs = []int32{
	0, // 0: lock_service.Response.status:type_name -> lock_service.Status
	2, // 1: lock_service.lock_response.response:type_name -> lock_service.Response
	6, // 2: lock_service.LockService.client_init:input_type -> lock_service.Int
	1, // 3: lock_service.LockService.lock_acquire:input_type -> lock_service.lock_args
	1, // 4: lock_service.LockService.lock_release:input_type -> lock_service.lock_args
	4, // 5: lock_service.LockService.file_append:input_type -> lock_service.file_args
	6, // 6: lock_service.LockService.client_close:input_type -> lock_service.Int
	5, // 7: lock_service.LockService.renew_lease:input_type -> lock_service.lease_args
	7, // 8: lock_service.LockService.client_init:output_type -> lock_service.StatusMsg
	3, // 9: lock_service.LockService.lock_acquire:output_type -> lock_service.lock_response
	2, // 10: lock_service.LockService.lock_release:output_type -> lock_service.Response
	2, // 11: lock_service.LockService.file_append:output_type -> lock_service.Response
	7, // 12: lock_service.LockService.client_close:output_type -> lock_service.StatusMsg
	2, // 13: lock_service.LockService.renew_lease:output_type -> lock_service.Response
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_lock_proto_init() }
func file_proto_lock_proto_init() {
	if File_proto_lock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lock_proto_goTypes,
		DependencyIndexes: file_proto_lock_proto_depIdxs,
		EnumInfos:         file_proto_lock_proto_enumTypes,
		MessageInfos:      file_proto_lock_proto_msgTypes,
	}.Build()
	File_proto_lock_proto = out.File
	file_proto_lock_proto_goTypes = nil
	file_proto_lock_proto_depIdxs = nil
}
