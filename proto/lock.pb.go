// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.28.3
// source: proto/lock.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status codes for responses
type Status int32

const (
	Status_OK                Status = 0
	Status_ERROR             Status = 1
	Status_LOCK_HELD         Status = 2
	Status_LOCK_NOT_HELD     Status = 3
	Status_INVALID_TOKEN     Status = 4 // New status for token validation failures
	Status_PERMISSION_DENIED Status = 5 // New status for permission-related errors
	Status_SERVER_FENCING    Status = 6 // Server is in fencing period after promotion
	Status_SECONDARY_MODE    Status = 7 // Server is in secondary mode and can't process client requests
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
		2: "LOCK_HELD",
		3: "LOCK_NOT_HELD",
		4: "INVALID_TOKEN",
		5: "PERMISSION_DENIED",
		6: "SERVER_FENCING",
		7: "SECONDARY_MODE",
	}
	Status_value = map[string]int32{
		"OK":                0,
		"ERROR":             1,
		"LOCK_HELD":         2,
		"LOCK_NOT_HELD":     3,
		"INVALID_TOKEN":     4,
		"PERMISSION_DENIED": 5,
		"SERVER_FENCING":    6,
		"SECONDARY_MODE":    7,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lock_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_lock_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{0}
}

// Client initialization arguments
type ClientInitArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInitArgs) Reset() {
	*x = ClientInitArgs{}
	mi := &file_proto_lock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInitArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInitArgs) ProtoMessage() {}

func (x *ClientInitArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInitArgs.ProtoReflect.Descriptor instead.
func (*ClientInitArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInitArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ClientInitArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Client initialization response
type ClientInitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInitResponse) Reset() {
	*x = ClientInitResponse{}
	mi := &file_proto_lock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInitResponse) ProtoMessage() {}

func (x *ClientInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInitResponse.ProtoReflect.Descriptor instead.
func (*ClientInitResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{1}
}

func (x *ClientInitResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *ClientInitResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Lock operation arguments
type LockArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                          // Token for lock validation
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockArgs) Reset() {
	*x = LockArgs{}
	mi := &file_proto_lock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockArgs) ProtoMessage() {}

func (x *LockArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockArgs.ProtoReflect.Descriptor instead.
func (*LockArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{2}
}

func (x *LockArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *LockArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LockArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Lock operation response
type LockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"` // Token for future operations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	mi := &file_proto_lock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{3}
}

func (x *LockResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *LockResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *LockResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// File operation arguments
type FileArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                          // Token for permission validation
	RequestId     string                 `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileArgs) Reset() {
	*x = FileArgs{}
	mi := &file_proto_lock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileArgs) ProtoMessage() {}

func (x *FileArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileArgs.ProtoReflect.Descriptor instead.
func (*FileArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{4}
}

func (x *FileArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *FileArgs) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileArgs) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *FileArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// File operation response
type FileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileResponse) Reset() {
	*x = FileResponse{}
	mi := &file_proto_lock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResponse) ProtoMessage() {}

func (x *FileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResponse.ProtoReflect.Descriptor instead.
func (*FileResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{5}
}

func (x *FileResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *FileResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Lease renewal arguments
type LeaseArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                          // Token for lease validation
	RequestId     string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Added for request tracking
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaseArgs) Reset() {
	*x = LeaseArgs{}
	mi := &file_proto_lock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaseArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseArgs) ProtoMessage() {}

func (x *LeaseArgs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseArgs.ProtoReflect.Descriptor instead.
func (*LeaseArgs) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{6}
}

func (x *LeaseArgs) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *LeaseArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LeaseArgs) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// Lease renewal response
type LeaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaseResponse) Reset() {
	*x = LeaseResponse{}
	mi := &file_proto_lock_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseResponse) ProtoMessage() {}

func (x *LeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseResponse.ProtoReflect.Descriptor instead.
func (*LeaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{7}
}

func (x *LeaseResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *LeaseResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Replicated state message for primary -> secondary communication
type ReplicatedState struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LockHolder      int32                  `protobuf:"varint,1,opt,name=lock_holder,json=lockHolder,proto3" json:"lock_holder,omitempty"`                // ID of lock holder (-1 if free)
	LockToken       string                 `protobuf:"bytes,2,opt,name=lock_token,json=lockToken,proto3" json:"lock_token,omitempty"`                    // Current lock token
	ExpiryTimestamp int64                  `protobuf:"varint,3,opt,name=expiry_timestamp,json=expiryTimestamp,proto3" json:"expiry_timestamp,omitempty"` // Expiry time as unix timestamp
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReplicatedState) Reset() {
	*x = ReplicatedState{}
	mi := &file_proto_lock_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicatedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedState) ProtoMessage() {}

func (x *ReplicatedState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedState.ProtoReflect.Descriptor instead.
func (*ReplicatedState) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{8}
}

func (x *ReplicatedState) GetLockHolder() int32 {
	if x != nil {
		return x.LockHolder
	}
	return 0
}

func (x *ReplicatedState) GetLockToken() string {
	if x != nil {
		return x.LockToken
	}
	return ""
}

func (x *ReplicatedState) GetExpiryTimestamp() int64 {
	if x != nil {
		return x.ExpiryTimestamp
	}
	return 0
}

// Response to replication update
type ReplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicationResponse) Reset() {
	*x = ReplicationResponse{}
	mi := &file_proto_lock_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationResponse) ProtoMessage() {}

func (x *ReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationResponse.ProtoReflect.Descriptor instead.
func (*ReplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{9}
}

func (x *ReplicationResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *ReplicationResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Heartbeat request (secondary -> primary)
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      int32                  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"` // ID of the secondary server
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_lock_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{10}
}

func (x *HeartbeatRequest) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

// Heartbeat response
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=lock.Status" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_lock_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lock_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_lock_proto_rawDescGZIP(), []int{11}
}

func (x *HeartbeatResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *HeartbeatResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_proto_lock_proto protoreflect.FileDescriptor

var file_proto_lock_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x4e, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x09, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x0d, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x93, 0x01, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x5a, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5e,
	0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5b,
	0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7d, 0x0a, 0x10, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x61, 0x0a, 0x14, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a,
	0x11, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x5f, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2a, 0x8f, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x48, 0x45, 0x4c, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x48, 0x45, 0x4c, 0x44, 0x10, 0x03,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x5f, 0x46, 0x45, 0x4e, 0x43, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x10, 0x07, 0x32, 0xb8, 0x03, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x69, 0x74, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x1a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x12, 0x0f, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x0f, 0x2e, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x12, 0x0f, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x1a, 0x1a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x20, 0x5a,
	0x1e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x2d, 0x4c, 0x6f, 0x63,
	0x6b, 0x2d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_lock_proto_rawDescOnce sync.Once
	file_proto_lock_proto_rawDescData []byte
)

func file_proto_lock_proto_rawDescGZIP() []byte {
	file_proto_lock_proto_rawDescOnce.Do(func() {
		file_proto_lock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)))
	})
	return file_proto_lock_proto_rawDescData
}

var file_proto_lock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_lock_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_lock_proto_goTypes = []any{
	(Status)(0),                 // 0: lock.Status
	(*ClientInitArgs)(nil),      // 1: lock.client_init_args
	(*ClientInitResponse)(nil),  // 2: lock.client_init_response
	(*LockArgs)(nil),            // 3: lock.lock_args
	(*LockResponse)(nil),        // 4: lock.lock_response
	(*FileArgs)(nil),            // 5: lock.file_args
	(*FileResponse)(nil),        // 6: lock.file_response
	(*LeaseArgs)(nil),           // 7: lock.lease_args
	(*LeaseResponse)(nil),       // 8: lock.lease_response
	(*ReplicatedState)(nil),     // 9: lock.replicated_state
	(*ReplicationResponse)(nil), // 10: lock.replication_response
	(*HeartbeatRequest)(nil),    // 11: lock.heartbeat_request
	(*HeartbeatResponse)(nil),   // 12: lock.heartbeat_response
}
var file_proto_lock_proto_depIdxs = []int32{
	0,  // 0: lock.client_init_response.status:type_name -> lock.Status
	0,  // 1: lock.lock_response.status:type_name -> lock.Status
	0,  // 2: lock.file_response.status:type_name -> lock.Status
	0,  // 3: lock.lease_response.status:type_name -> lock.Status
	0,  // 4: lock.replication_response.status:type_name -> lock.Status
	0,  // 5: lock.heartbeat_response.status:type_name -> lock.Status
	1,  // 6: lock.LockService.ClientInit:input_type -> lock.client_init_args
	3,  // 7: lock.LockService.LockAcquire:input_type -> lock.lock_args
	3,  // 8: lock.LockService.LockRelease:input_type -> lock.lock_args
	5,  // 9: lock.LockService.FileAppend:input_type -> lock.file_args
	7,  // 10: lock.LockService.RenewLease:input_type -> lock.lease_args
	9,  // 11: lock.LockService.UpdateSecondaryState:input_type -> lock.replicated_state
	11, // 12: lock.LockService.Ping:input_type -> lock.heartbeat_request
	2,  // 13: lock.LockService.ClientInit:output_type -> lock.client_init_response
	4,  // 14: lock.LockService.LockAcquire:output_type -> lock.lock_response
	4,  // 15: lock.LockService.LockRelease:output_type -> lock.lock_response
	6,  // 16: lock.LockService.FileAppend:output_type -> lock.file_response
	8,  // 17: lock.LockService.RenewLease:output_type -> lock.lease_response
	10, // 18: lock.LockService.UpdateSecondaryState:output_type -> lock.replication_response
	12, // 19: lock.LockService.Ping:output_type -> lock.heartbeat_response
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_lock_proto_init() }
func file_proto_lock_proto_init() {
	if File_proto_lock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_lock_proto_rawDesc), len(file_proto_lock_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lock_proto_goTypes,
		DependencyIndexes: file_proto_lock_proto_depIdxs,
		EnumInfos:         file_proto_lock_proto_enumTypes,
		MessageInfos:      file_proto_lock_proto_msgTypes,
	}.Build()
	File_proto_lock_proto = out.File
	file_proto_lock_proto_goTypes = nil
	file_proto_lock_proto_depIdxs = nil
}
